let CalendarTableFunction = (StartDate as date, EndDate as date, FiscalStartMonth as number) as table =>
  let
    DayCount = Duration.Days(Duration.From(EndDate - StartDate)) + 1,
    Source = List.Dates(StartDate, DayCount, #duration(1, 0, 0, 0)),
    TableFromList = Table.FromList(Source, Splitter.SplitByNothing()),
    ChangedType = Table.TransformColumnTypes(TableFromList, {{"Column1", type date}}),
    RenamedColumns = Table.RenameColumns(ChangedType, {{"Column1", "Date"}}),
    
    InsertYear = Table.AddColumn(RenamedColumns, "Year", each Date.Year([Date]), type text),
    InsertYearNumber = Table.AddColumn(RenamedColumns, "YearNumber", each Date.Year([Date])),
    InsertQuarter = Table.AddColumn(InsertYear, "QuarterNumber", each Date.QuarterOfYear([Date])),
    InsertMonth = Table.AddColumn(InsertQuarter, "MonthNumber", each Date.Month([Date]), type text),
    InsertDay = Table.AddColumn(InsertMonth, "Day", each Date.Day([Date])),
    
    InsertDayInt = Table.AddColumn(InsertDay, "DateNumber", each [Year] * 10000 + [MonthNumber] * 100 + [Day]),
    InsertMonthName = Table.AddColumn(InsertDayInt, "Month", each Date.ToText([Date], "MMMM", "en-US"), type text),
    InsertCalendarMonth = Table.AddColumn(InsertMonthName, "Month and Year", each (try Text.Range([Month], 0, 3) otherwise [Month]) & " " & Number.ToText([Year])),
    InsertCalendarQtr = Table.AddColumn(InsertCalendarMonth, "Quarter and Year", each "Q" & Number.ToText([QuarterNumber]) & " " & Number.ToText([Year])),
    
    InsertDayWeek = Table.AddColumn(InsertCalendarQtr, "DayOfWeek", each Date.DayOfWeek([Date])),
    InsertDayName = Table.AddColumn(InsertDayWeek, "DayName", each Date.ToText([Date], "dddd", "en-US"), type text),
    InsertWeekEnding = Table.AddColumn(InsertDayName, "WeekEnding", each Date.EndOfWeek([Date]), type date),
    InsertWeekNumber = Table.AddColumn(InsertWeekEnding, "WeekNumber", each Date.WeekOfYear([Date])),
    
    InsertMonthYearNumber = Table.AddColumn(InsertWeekNumber, "MonthYearNumber", each [Year] * 10000 + [MonthNumber] * 100),
    InsertQuarterYearNumber = Table.AddColumn(InsertMonthYearNumber, "QuarterYearNumber", each [Year] * 10000 + [QuarterNumber] * 100),
    
    ChangedType1 = Table.TransformColumnTypes(InsertQuarterYearNumber, {
        {"QuarterYearNumber", Int64.Type},
        {"WeekNumber", Int64.Type},
        {"Year", type text},
        {"MonthYearNumber", Int64.Type},
        {"DateNumber", Int64.Type},
        {"Day", Int64.Type},
        {"MonthNumber", Int64.Type},
        {"QuarterNumber", Int64.Type},
        {"Month and Year", type text},
        {"Quarter and Year", type text},
        {"DayOfWeek", Int64.Type}
    }),

    InsertShortYear = Table.AddColumn(ChangedType1, "ShortYear", each Text.End(Text.From([Year]), 2), type text),
    AddFY = Table.AddColumn(InsertShortYear, "FY", each "FY" & (if [MonthNumber] >= FiscalStartMonth then Text.From(Number.From([ShortYear]) + 1) else [ShortYear]))
    
  in
    AddFY
in
    CalendarTableFunction
